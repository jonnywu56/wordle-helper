{"ast":null,"code":"import { default as GraphemeSplitter } from 'grapheme-splitter';\nimport { VALID_GUESSES } from '../constants/validGuesses';\nimport { WORDS } from '../constants/wordlist';\nexport const isWordInWordList = word => {\n  return WORDS.includes(localeAwareLowerCase(word)) || VALID_GUESSES.includes(localeAwareLowerCase(word));\n};\nexport const unicodeSplit = word => {\n  return new GraphemeSplitter().splitGraphemes(word);\n};\nexport const unicodeLength = word => {\n  return unicodeSplit(word).length;\n};\nexport const localeAwareLowerCase = text => {\n  return process.env.REACT_APP_LOCALE_STRING ? text.toLocaleLowerCase(process.env.REACT_APP_LOCALE_STRING) : text.toLowerCase();\n};\nexport const localeAwareUpperCase = text => {\n  return process.env.REACT_APP_LOCALE_STRING ? text.toLocaleUpperCase(process.env.REACT_APP_LOCALE_STRING) : text.toUpperCase();\n};","map":{"version":3,"sources":["/Users/Jonny/Desktop/wordle-helper/src/lib/words.ts"],"names":["default","GraphemeSplitter","VALID_GUESSES","WORDS","isWordInWordList","word","includes","localeAwareLowerCase","unicodeSplit","splitGraphemes","unicodeLength","length","text","process","env","REACT_APP_LOCALE_STRING","toLocaleLowerCase","toLowerCase","localeAwareUpperCase","toLocaleUpperCase","toUpperCase"],"mappings":"AAAA,SAASA,OAAO,IAAIC,gBAApB,QAA4C,mBAA5C;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,IAAkB;AAChD,SACEF,KAAK,CAACG,QAAN,CAAeC,oBAAoB,CAACF,IAAD,CAAnC,KACAH,aAAa,CAACI,QAAd,CAAuBC,oBAAoB,CAACF,IAAD,CAA3C,CAFF;AAID,CALM;AAOP,OAAO,MAAMG,YAAY,GAAIH,IAAD,IAAkB;AAC5C,SAAO,IAAIJ,gBAAJ,GAAuBQ,cAAvB,CAAsCJ,IAAtC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMK,aAAa,GAAIL,IAAD,IAAkB;AAC7C,SAAOG,YAAY,CAACH,IAAD,CAAZ,CAAmBM,MAA1B;AACD,CAFM;AAIP,OAAO,MAAMJ,oBAAoB,GAAIK,IAAD,IAAkB;AACpD,SAAOC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GACHH,IAAI,CAACI,iBAAL,CAAuBH,OAAO,CAACC,GAAR,CAAYC,uBAAnC,CADG,GAEHH,IAAI,CAACK,WAAL,EAFJ;AAGD,CAJM;AAMP,OAAO,MAAMC,oBAAoB,GAAIN,IAAD,IAAkB;AACpD,SAAOC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GACHH,IAAI,CAACO,iBAAL,CAAuBN,OAAO,CAACC,GAAR,CAAYC,uBAAnC,CADG,GAEHH,IAAI,CAACQ,WAAL,EAFJ;AAGD,CAJM","sourcesContent":["import { default as GraphemeSplitter } from 'grapheme-splitter'\n\nimport { VALID_GUESSES } from '../constants/validGuesses'\nimport { WORDS } from '../constants/wordlist'\n\nexport const isWordInWordList = (word: string) => {\n  return (\n    WORDS.includes(localeAwareLowerCase(word)) ||\n    VALID_GUESSES.includes(localeAwareLowerCase(word))\n  )\n}\n\nexport const unicodeSplit = (word: string) => {\n  return new GraphemeSplitter().splitGraphemes(word)\n}\n\nexport const unicodeLength = (word: string) => {\n  return unicodeSplit(word).length\n}\n\nexport const localeAwareLowerCase = (text: string) => {\n  return process.env.REACT_APP_LOCALE_STRING\n    ? text.toLocaleLowerCase(process.env.REACT_APP_LOCALE_STRING)\n    : text.toLowerCase()\n}\n\nexport const localeAwareUpperCase = (text: string) => {\n  return process.env.REACT_APP_LOCALE_STRING\n    ? text.toLocaleUpperCase(process.env.REACT_APP_LOCALE_STRING)\n    : text.toUpperCase()\n}\n"]},"metadata":{},"sourceType":"module"}