{"ast":null,"code":"var _jsxFileName = \"/Users/Jonny/Desktop/wordle-solver/src/components/grid/CompletedRow.tsx\";\nimport { unicodeSplit } from '../../lib/words';\nimport { Cell } from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompletedRow = _ref => {\n  let {\n    status,\n    guess,\n    isRevealing\n  } = _ref;\n  const splitGuess = unicodeSplit(guess);\n  console.log(status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-1 flex justify-center\",\n    children: splitGuess.map((letter, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: letter,\n      status: status[i],\n      position: i,\n      isRevealing: isRevealing\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CompletedRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedRow\");","map":{"version":3,"sources":["/Users/Jonny/Desktop/wordle-solver/src/components/grid/CompletedRow.tsx"],"names":["unicodeSplit","Cell","CompletedRow","status","guess","isRevealing","splitGuess","console","log","map","letter","i"],"mappings":";AACA,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;;AAQA,OAAO,MAAMC,YAAY,GAAG,QAA2C;AAAA,MAA1C;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAA0C;AACrE,QAAMC,UAAU,GAAGN,YAAY,CAACI,KAAD,CAA/B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,cACGG,UAAU,CAACG,GAAX,CAAe,CAACC,MAAD,EAASC,CAAT,kBACd,QAAC,IAAD;AAEE,MAAA,KAAK,EAAED,MAFT;AAGE,MAAA,MAAM,EAAEP,MAAM,CAACQ,CAAD,CAHhB;AAIE,MAAA,QAAQ,EAAEA,CAJZ;AAKE,MAAA,WAAW,EAAEN;AALf,OACOM,CADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBM;KAAMT,Y","sourcesContent":["import { CharStatus, getGuessStatuses } from '../../lib/statuses'\nimport { unicodeSplit } from '../../lib/words'\nimport { Cell } from './Cell'\n\ntype Props = {\n  status: CharStatus[]\n  guess: string\n  isRevealing?: boolean\n}\n\nexport const CompletedRow = ({ status, guess, isRevealing }: Props) => {\n  const splitGuess = unicodeSplit(guess)\n  console.log(status)\n  return (\n    <div className=\"mb-1 flex justify-center\">\n      {splitGuess.map((letter, i) => (\n        <Cell\n          key={i}\n          value={letter}\n          status={status[i]}\n          position={i}\n          isRevealing={isRevealing}\n        />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}