{"ast":null,"code":"var _jsxFileName = \"/Users/Jonny/Desktop/wordle-solver/src/components/grid/Cell.tsx\";\nimport classnames from 'classnames';\nimport { getStoredIsHighContrastMode } from '../../lib/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cell = _ref => {\n  let {\n    value,\n    status,\n    isRevealing,\n    isCompleted,\n    onCell,\n    position = 0\n  } = _ref;\n  console.log(isCompleted);\n  const isFilled = value && !isCompleted;\n  const shouldReveal = isRevealing && isCompleted;\n  const animationDelay = `0ms`;\n  const isHighContrast = getStoredIsHighContrastMode();\n  const temp = 'xxshort:w-11 xxshort:h-11 short:text-2xl short:w-12 short:h-12 w-14 h-14 bg-black border-solid border-2 flex items-center justify-center mx-0.5 text-4xl font-bold rounded dark:text-white';\n  const classes = classnames(temp, {\n    'bg-white dark:bg-slate-900 border-slate-200 dark:border-slate-600': !status,\n    'border-black dark:border-slate-100': value && !status,\n    'absent shadowed bg-slate-400 dark:bg-slate-700 text-white border-slate-400 dark:border-slate-700': status === 'absent',\n    'correct shadowed bg-orange-500 text-white border-orange-500': status === 'correct' && isHighContrast,\n    'present shadowed bg-cyan-500 text-white border-cyan-500': status === 'present' && isHighContrast,\n    'correct shadowed bg-green-500 text-white border-green-500': status === 'correct' && !isHighContrast,\n    'present shadowed bg-yellow-500 text-white border-yellow-500': status === 'present' && !isHighContrast,\n    'cell-fill-animation': isFilled,\n    'cell-reveal': shouldReveal\n  });\n\n  const handleClick = event => {\n    if (onCell) {\n      onCell(position); //event.currentTarget.blur()\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes,\n      style: {\n        animationDelay\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-container\",\n        style: {\n          animationDelay\n        },\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/Jonny/Desktop/wordle-solver/src/components/grid/Cell.tsx"],"names":["classnames","getStoredIsHighContrastMode","Cell","value","status","isRevealing","isCompleted","onCell","position","console","log","isFilled","shouldReveal","animationDelay","isHighContrast","temp","classes","handleClick","event"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAGA,SAASC,2BAAT,QAA4C,wBAA5C;;AAYA,OAAO,MAAMC,IAAI,GAAG,QAOP;AAAA,MAPQ;AACnBC,IAAAA,KADmB;AAEnBC,IAAAA,MAFmB;AAGnBC,IAAAA,WAHmB;AAInBC,IAAAA,WAJmB;AAKnBC,IAAAA,MALmB;AAMnBC,IAAAA,QAAQ,GAAG;AANQ,GAOR;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,QAAMK,QAAQ,GAAGR,KAAK,IAAI,CAACG,WAA3B;AACA,QAAMM,YAAY,GAAGP,WAAW,IAAIC,WAApC;AACA,QAAMO,cAAc,GAAI,KAAxB;AACA,QAAMC,cAAc,GAAGb,2BAA2B,EAAlD;AACA,QAAMc,IAAI,GACR,4LADF;AAGA,QAAMC,OAAO,GAAGhB,UAAU,CAACe,IAAD,EAAO;AAC/B,yEACE,CAACX,MAF4B;AAG/B,0CAAsCD,KAAK,IAAI,CAACC,MAHjB;AAI/B,wGACEA,MAAM,KAAK,QALkB;AAM/B,mEACEA,MAAM,KAAK,SAAX,IAAwBU,cAPK;AAQ/B,+DACEV,MAAM,KAAK,SAAX,IAAwBU,cATK;AAU/B,iEACEV,MAAM,KAAK,SAAX,IAAwB,CAACU,cAXI;AAY/B,mEACEV,MAAM,KAAK,SAAX,IAAwB,CAACU,cAbI;AAc/B,2BAAuBH,QAdQ;AAe/B,mBAAeC;AAfgB,GAAP,CAA1B;;AAkBA,QAAMK,WAAuD,GAAIC,KAAD,IAAW;AACzE,QAAIX,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACC,QAAD,CAAN,CADU,CAEV;AACD;AACF,GALD;;AAOA,sBACE;AAAQ,IAAA,OAAO,EAAES,WAAjB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAED,OAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEH,QAAAA;AAAF,OAAhC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,KAAK,EAAE;AAAEA,UAAAA;AAAF,SAAzC;AAAA,kBACGV;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlDM;KAAMD,I","sourcesContent":["import classnames from 'classnames'\n\nimport { REVEAL_TIME_MS } from '../../constants/settings'\nimport { getStoredIsHighContrastMode } from '../../lib/localStorage'\nimport { CharStatus } from '../../lib/statuses'\n\ntype Props = {\n  value?: string\n  status?: CharStatus\n  isRevealing?: boolean\n  isCompleted?: boolean\n  position?: number\n  onCell?: (position: number) => void\n}\n\nexport const Cell = ({\n  value,\n  status,\n  isRevealing,\n  isCompleted,\n  onCell,\n  position = 0,\n}: Props) => {\n  console.log(isCompleted)\n  const isFilled = value && !isCompleted\n  const shouldReveal = isRevealing && isCompleted\n  const animationDelay = `0ms`\n  const isHighContrast = getStoredIsHighContrastMode()\n  const temp =\n    'xxshort:w-11 xxshort:h-11 short:text-2xl short:w-12 short:h-12 w-14 h-14 bg-black border-solid border-2 flex items-center justify-center mx-0.5 text-4xl font-bold rounded dark:text-white'\n\n  const classes = classnames(temp, {\n    'bg-white dark:bg-slate-900 border-slate-200 dark:border-slate-600':\n      !status,\n    'border-black dark:border-slate-100': value && !status,\n    'absent shadowed bg-slate-400 dark:bg-slate-700 text-white border-slate-400 dark:border-slate-700':\n      status === 'absent',\n    'correct shadowed bg-orange-500 text-white border-orange-500':\n      status === 'correct' && isHighContrast,\n    'present shadowed bg-cyan-500 text-white border-cyan-500':\n      status === 'present' && isHighContrast,\n    'correct shadowed bg-green-500 text-white border-green-500':\n      status === 'correct' && !isHighContrast,\n    'present shadowed bg-yellow-500 text-white border-yellow-500':\n      status === 'present' && !isHighContrast,\n    'cell-fill-animation': isFilled,\n    'cell-reveal': shouldReveal,\n  })\n\n  const handleClick: React.MouseEventHandler<HTMLButtonElement> = (event) => {\n    if (onCell) {\n      onCell(position)\n      //event.currentTarget.blur()\n    }\n  }\n\n  return (\n    <button onClick={handleClick}>\n      <div className={classes} style={{ animationDelay }}>\n        <div className=\"letter-container\" style={{ animationDelay }}>\n          {value}\n        </div>\n      </div>\n    </button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}